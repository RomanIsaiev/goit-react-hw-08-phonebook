{"version":3,"file":"static/js/355.badbebc1.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","GlobalStyle.js","components/ContactForm/ContactForm.js","components/Contact/Contact.styled.js","components/Contact/Contact.js","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.contactsFilter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n\n  }\n\n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n      monospace;\n  }\n\nul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  }\n\n  img {\n    display: block;\n    max-width: 100%;\n    object-fit: cover;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const form = event.target;\n    const { name, number } = form.elements;\n\n    if (\n      contacts.find(\n        item =>\n          item.name.toLowerCase().trim() === name.value.toLowerCase().trim()\n      )\n    ) {\n      alert(`${name.value} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContact({ name: name.value, number: number.value }));\n    form.reset();\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"name\" placeholder=\"Enter name\" />\n        <input type=\"tel\" name=\"number\" placeholder=\"Enter phone number\" />\n        <button type=\"submit\">Add Contact</button>\n      </form>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n\n  text-align: center;\n\n  border: 1px solid black;\n\n  padding: 10px 20px;\n\n  border-radius: 10px;\n`;\n\nexport const ContactItemContainer = styled.div`\n  width: 220px;\n`;\n\nexport const DeleteButton = styled.button`\n  max-width: 208px;\n\n  color: #fff;\n\n  border-radius: 10px;\n\n  padding: 5px 10px;\n  border: none;\n  background-color: crimson;\n\n  transform: scale(1);\n  transition: transform 250ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.2);\n    transition: transform 250ms ease-in-out;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport {\n  ContactItem,\n  ContactItemContainer,\n  DeleteButton,\n} from './Contact.styled';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const Contact = ({ data: { name, phone, id } }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <ContactItem key={id}>\n      <ContactItemContainer>\n        {name} <br /> {phone}\n      </ContactItemContainer>\n      <DeleteButton onClick={handleDelete}>Delete</DeleteButton>\n    </ContactItem>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ListWithContacts = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n","import { Contact } from 'components/Contact/Contact';\nimport { ListWithContacts } from './ContactsList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nexport const ContactsList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ListWithContacts>\n      {visibleContacts.map(contact => (\n        <Contact data={contact} key={contact.id} />\n      ))}\n    </ListWithContacts>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterContainer = styled.div`\n  margin-bottom: 15px;\n`;\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n`;\n\nexport const FilterInput = styled.input`\n  padding: 5px;\n`;\n","import { nanoid } from 'nanoid';\n\nimport { FilterContainer, FilterLabel, FilterInput } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { contactsFilter } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const filterInput = nanoid();\n  const dispatch = useDispatch();\n\n  const handleFilterChange = filter => {\n    return dispatch(contactsFilter(filter));\n  };\n\n  return (\n    <FilterContainer>\n      <FilterLabel htmlFor={filterInput}>\n        Find contacts by name:\n        <FilterInput\n          type=\"text\"\n          id={filterInput}\n          onChange={event => handleFilterChange(event.target.value)}\n        ></FilterInput>\n      </FilterLabel>\n    </FilterContainer>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { GlobalStyle } from 'GlobalStyle';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your tasks</title>\n      </Helmet>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ContactsList />\n      <GlobalStyle />\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filter","contactsFilter","contact","name","toLowerCase","includes","GlobalStyle","createGlobalStyle","_templateObject","_taggedTemplateLiteral","ContactForm","dispatch","useDispatch","useSelector","_jsx","children","_jsxs","onSubmit","event","preventDefault","form","target","_form$elements","elements","number","find","item","trim","value","alert","concat","addContact","reset","type","placeholder","ContactItem","styled","ContactItemContainer","_templateObject2","DeleteButton","_templateObject3","Contact","_ref","_ref$data","data","phone","id","onClick","deleteContact","ListWithContacts","ContactsList","visibleContacts","map","FilterContainer","FilterLabel","FilterInput","Filter","filterInput","nanoid","htmlFor","onChange","Contacts","useEffect","fetchContacts","_Fragment","Helmet"],"sourceRoot":""}